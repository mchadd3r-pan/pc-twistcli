on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}
  PCC_USER: ${{ secrets.PCC_USER }}
  PCC_PASS: ${{ secrets.PCC_PASS }}
  PCC_CONSOLE_URL: ${{ secrets.PCC_CONSOLE_URL }}

jobs:
  build-and-scan:
    name: Build and scan image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Build the image
        run: docker build -t $IMAGE_NAME .

      - name: Download twistcli
        run: |
          curl -k -u "$PCC_USER":"$PCC_PASS" --output ./twistcli "$PCC_CONSOLE_URL"/api/v1/util/twistcli
      
      - name: Change permissions
        run: |
          chmod +x ./twistcli
      
      - name: Scan with twistcli
        run: |
          ./twistcli images scan "$IMAGE_NAME" --user "$PCC_USER" --password "PCC_PASS" --address "$PCC_CONSOLE_URL"

      # - name: Prisma Cloud image scan
      #   id: scan
      #   uses: PaloAltoNetworks/prisma-cloud-scan@v1.5
      #   with:
      #     pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
      #     pcc_user: ${{ secrets.PCC_USER }}
      #     pcc_pass: ${{ secrets.PCC_PASS }}
      #     image_name: ${{ env.IMAGE_NAME }}

          # (Optional) for compatibility with GitHub's code scanning alerts
      - name: Upload SARIF file
        if: ${{ always() }} # necessary if using failure thresholds in the image scan
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif_file }}
